version: "3.9"

services:
  generator:
    build:
      context: ./generator
    container_name: generator
    environment:
      - TZ=UTC
    volumes:
      - ./shared-data:/data           # i CSV saranno in ./shared-data/assets sull'host
    command: >
      python /app/data_generator.py
      --out_dir /data/assets
      --freq 10 --motors 4 --pumps 2 --valves 4
      --window_s 30
      --fault_rate_per_min 0.08
      --fault_avg_duration_s 20
      --seed 42
    healthcheck:
      test: ["CMD-SHELL", "ls /data/assets/motor_M1.csv >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  ai-service:
    build:
      context: ./model
    container_name: ai-service
    depends_on:
      generator:
        condition: service_healthy
    environment:
      - DATA_DIR=/data/assets
      - WINDOW_S=30
      - FREQ_HZ=10
      - TZ=UTC
    volumes:
      - ./shared-data:/data
    ports:
      - "5001:5000"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:5000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  java-service:
    build:
      context: ./java
    container_name: java-service
    depends_on:
      ai-service:
        condition: service_healthy
    environment:
      - DIAG_BASE_URL=http://ai-service:5000
      - ASSET_ID=M1
      - DIAG_POLL_MS=10000   # ogni 10s prende values e invia diagnosi
    restart: unless-stopped

